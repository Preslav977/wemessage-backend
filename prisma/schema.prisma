// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  GUEST
}

enum Presence {
  ONLINE
  OFFLINE
}

model User {
  id                 Int            @id @default(autoincrement())
  first_name         String         @unique
  last_name          String         @unique
  username           String         @unique
  password           String
  confirm_password   String
  bio                String?
  profile_picture    String
  background_picture String
  online_presence    Presence       @default(OFFLINE)
  role               Role           @default(USER)
  conversations      Conversation[]
  messages           Message[]
  group              Group?         @relation(fields: [groupId], references: [id])
  groupId            String?

  @@map("user")
}

model Conversation {
  id       String    @id @default(uuid())
  users    User[]
  messages Message[]
  group    Group?    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId  String?

  @@map("chat")
}

model Message {
  id             Int          @id @default(autoincrement())
  message_text   String
  message_image  String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  conversationId String
  group          Group?       @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId        String?

  @@map("message")
}

model Group {
  id            String         @id @default(uuid())
  group_name    String         @unique
  users         User[]
  conversations Conversation[]
  messages      Message[]

  @@map("group")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
